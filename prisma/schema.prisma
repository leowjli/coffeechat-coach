generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Contact {
  id               String          @id @default(cuid())
  ownerClerkUserId String
  name             String?
  profileUrl       String?
  rawProfileText   String
  notes            String?
  createdAt        DateTime        @default(now())
  updatedAt        DateTime        @updatedAt
  user_id          String
  kits             CoffeechatKit[]

  @@index([user_id])
  @@index([ownerClerkUserId])
}

model CoffeechatKit {
  id               String   @id @default(cuid())
  ownerClerkUserId String
  contactId        String
  sharedInterests  Json
  starters         Json
  followUps        Json
  oneLinePitch     String
  modelVersion     String?
  tokensUsed       Int?
  createdAt        DateTime @default(now())
  user_id          String
  contact          Contact  @relation(fields: [contactId], references: [id], onDelete: Cascade)

  @@index([user_id])
  @@index([ownerClerkUserId])
}

model ChatSession {
  id               String   @id @default(cuid())
  ownerClerkUserId String
  scenario         String
  transcript       Json
  feedback         Json
  createdAt        DateTime @default(now())
  user_id          String

  @@index([user_id])
  @@index([ownerClerkUserId])
}

model ColdEmailDraft {
  id                   String   @id @default(cuid())
  ownerClerkUserId     String
  draftText            String
  aiFeedback           Json
  aiRewrite            String
  aiSubjectSuggestions Json
  createdAt            DateTime @default(now())
  user_id              String

  @@index([user_id])
  @@index([ownerClerkUserId])
}
